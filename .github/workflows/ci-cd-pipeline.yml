name: CI/CD Pipeline

on:
  [push, pull_request]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up cache
        id: cache-singularity
        uses: actions/cache@v2
        with:
          path: /usr/local/singularity
          key: ${{ runner.os }}-singularity-${{ hashFiles('Singularity.def') }}
          restore-keys: |
            ${{ runner.os }}-singularity-

      - name: Install dependencies for Singularity
        if: steps.cache-singularity.outputs.cache-hit != 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            uuid-dev \
            libgpgme11-dev \
            squashfs-tools \
            libseccomp-dev \
            wget \
            pkg-config \
            git \
            cryptsetup-bin \
            libfuse-dev \
            libfuse3-dev

      - name: Install Go
        if: steps.cache-singularity.outputs.cache-hit != 'true'
        run: |
          export VERSION=1.21.0 OS=linux ARCH=amd64 && \
          wget https://dl.google.com/go/go$VERSION.$OS-$ARCH.tar.gz && \
          sudo tar -C /usr/local -xzvf go$VERSION.$OS-$ARCH.tar.gz && \
          echo 'export PATH=/usr/local/go/bin:$PATH' >> $GITHUB_ENV

      - name: Install Singularity
        if: steps.cache-singularity.outputs.cache-hit != 'true'
        run: |
          export VERSION=4.1.3 && \
          wget https://github.com/sylabs/singularity/releases/download/v${VERSION}/singularity-ce-${VERSION}.tar.gz && \
          tar -xzf singularity-ce-${VERSION}.tar.gz && \
          cd singularity-ce-${VERSION} && \
          ./mconfig && \
          make -C builddir && \
          sudo make -C builddir install &&\
          sudo mkdir -p /usr/local/singularity && \
          sudo cp -r builddir/* /usr/local/singularity

      - name: Singularity remote login
        run: |
          echo "${{ secrets.SINGULARITY_TOKEN }}" | singularity remote login --token-file -

      - name: Create Singularity definition file
        run: |
          echo "Bootstrap: library
          From: Ubuntu:18.04
          Stage: build

          %setup
              touch /file1
              touch \${SINGULARITY_ROOTFS}/file2

          %post
              git clone --recurse-submodules https://github.com/BiceMar/sweng_project_part_2.git
              sudo apt-get update && apt-get install -y mpich

          %runscript
              echo \"Test run scripts\"

          %test
              echo \"looking for MPI...\"
              mpich
              grep -q NAME=\"Ubuntu\" /etc/os-release
              if [ \$? -eq 0]; then
                  echo \"Container base is Ubuntu as expected.\"
              else
                  echo \"Container base is not Ubuntu.\"
              fi

          %labels
              SWENG4HPC project v.1.0" > singularity.def

      - name: Build Singularity container
        run: |
          singularity build --remote my_container.sif singularity.def

      - name: Test Singularity container
        run: |
          singularity test my_container.sif

    

 

